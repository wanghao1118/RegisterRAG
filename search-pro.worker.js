const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/zh/\":{\"documentCount\":5,\"nextId\":5,\"documentIds\":{\"0\":\"5\",\"1\":\"5#🌟-特性\",\"2\":\"5#🙏-致谢\",\"3\":\"5#🤝-贡献\",\"4\":\"5#✉️-联系我们\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,8],\"1\":[2,13],\"2\":[2,21],\"3\":[2,6],\"4\":[2,5]},\"averageFieldLength\":[1.8,10.6],\"storedFields\":{\"0\":{\"h\":\"介绍\",\"t\":[\"Register RAG 提供了一种简单、高度可自定义、用于构建 RAG（检索增强生成）任务的流程的框架。\"]},\"1\":{\"h\":\"🌟 特性\",\"t\":[\"高度可自定义\",\"你可以使用我们提供的组建，通过修改配置文件搭建自己的框架。\",\"你也可以简单地添加自己的组件。你只需要继承基类，实现必需的方法，并且在工厂中注册你的组件，就可以在配置文件中使用你的组件了。\",\"快速搭建\",\"可以通过pip快速安装（开发中）\",\"可以通过docker镜像运行（开发中）\"]},\"2\":{\"h\":\"🙏 致谢\",\"t\":[\"我们十分感谢前任所做的工作，这些工作为我们框架的搭建提供了很大的帮助。以下是我们使用的开源项目列表，排名不分先后：\",\"Xinference: 可以简化各种 AI 模型的运行和集成。更多信息可以点击这里查看。\",\"Ollama: 可以快速部署 LLM。更多信息可以在这里找到。\",\"VuePress: 一个简单的静态网站搭建框架。更多信息可以在这里找到。\",\"vuepress-theme-hope: 一个具有强大功能的 vuepress 主题。更多信息可以在这里找到。\"]},\"3\":{\"h\":\"🤝 贡献\",\"t\":[\"我们欢迎更多开发者为 Register RAG 贡献代码！请查看贡献指南获取更多信息。\"]},\"4\":{\"h\":\"✉️ 联系我们\",\"t\":[\"如果你有任何问题或建议，请通过邮件或GitHub Issues联系我们。我们会尽快回复你。\"]}},\"dirtCount\":0,\"index\":[[\"issues联系我们\",{\"1\":{\"4\":1}}],[\"请通过邮件或github\",{\"1\":{\"4\":1}}],[\"请查看贡献指南获取更多信息\",{\"1\":{\"3\":1}}],[\"如果你有任何问题或建议\",{\"1\":{\"4\":1}}],[\"联系我们\",{\"0\":{\"4\":1}}],[\"✉️\",{\"0\":{\"4\":1}}],[\"我们会尽快回复你\",{\"1\":{\"4\":1}}],[\"我们欢迎更多开发者为\",{\"1\":{\"3\":1}}],[\"我们十分感谢前任所做的工作\",{\"1\":{\"2\":1}}],[\"贡献代码\",{\"1\":{\"3\":1}}],[\"贡献\",{\"0\":{\"3\":1}}],[\"🤝\",{\"0\":{\"3\":1}}],[\"主题\",{\"1\":{\"2\":1}}],[\"一个具有强大功能的\",{\"1\":{\"2\":1}}],[\"一个简单的静态网站搭建框架\",{\"1\":{\"2\":1}}],[\"hope\",{\"1\":{\"2\":1}}],[\"theme\",{\"1\":{\"2\":1}}],[\"vuepress\",{\"1\":{\"2\":3}}],[\"更多信息可以在这里找到\",{\"1\":{\"2\":3}}],[\"更多信息可以点击这里查看\",{\"1\":{\"2\":1}}],[\"llm\",{\"1\":{\"2\":1}}],[\"ollama\",{\"1\":{\"2\":1}}],[\"模型的运行和集成\",{\"1\":{\"2\":1}}],[\"ai\",{\"1\":{\"2\":1}}],[\"可以快速部署\",{\"1\":{\"2\":1}}],[\"可以简化各种\",{\"1\":{\"2\":1}}],[\"可以通过docker镜像运行\",{\"1\":{\"1\":1}}],[\"可以通过pip快速安装\",{\"1\":{\"1\":1}}],[\"xinference\",{\"1\":{\"2\":1}}],[\"排名不分先后\",{\"1\":{\"2\":1}}],[\"以下是我们使用的开源项目列表\",{\"1\":{\"2\":1}}],[\"这些工作为我们框架的搭建提供了很大的帮助\",{\"1\":{\"2\":1}}],[\"致谢\",{\"0\":{\"2\":1}}],[\"🙏\",{\"0\":{\"2\":1}}],[\"开发中\",{\"1\":{\"1\":2}}],[\"快速搭建\",{\"1\":{\"1\":1}}],[\"就可以在配置文件中使用你的组件了\",{\"1\":{\"1\":1}}],[\"并且在工厂中注册你的组件\",{\"1\":{\"1\":1}}],[\"实现必需的方法\",{\"1\":{\"1\":1}}],[\"你只需要继承基类\",{\"1\":{\"1\":1}}],[\"你也可以简单地添加自己的组件\",{\"1\":{\"1\":1}}],[\"你可以使用我们提供的组建\",{\"1\":{\"1\":1}}],[\"通过修改配置文件搭建自己的框架\",{\"1\":{\"1\":1}}],[\"特性\",{\"0\":{\"1\":1}}],[\"🌟\",{\"0\":{\"1\":1}}],[\"任务的流程的框架\",{\"1\":{\"0\":1}}],[\"检索增强生成\",{\"1\":{\"0\":1}}],[\"用于构建\",{\"1\":{\"0\":1}}],[\"高度可自定义\",{\"1\":{\"0\":1,\"1\":1}}],[\"提供了一种简单\",{\"1\":{\"0\":1}}],[\"rag\",{\"1\":{\"0\":2,\"3\":1}}],[\"register\",{\"1\":{\"0\":1,\"3\":1}}],[\"介绍\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":15,\"nextId\":15,\"documentIds\":{\"0\":\"1\",\"1\":\"1#from-pip\",\"2\":\"1#from-source\",\"3\":\"1#docker\",\"4\":\"2\",\"5\":\"2#basic-configuration\",\"6\":\"2#xinference-service\",\"7\":\"2#pipeline\",\"8\":\"3\",\"9\":\"3#🌟-features\",\"10\":\"3#🚀-installation\",\"11\":\"3#🙏-acknowledgements\",\"12\":\"3#🤝-contribution\",\"13\":\"3#✉️-contact-us\",\"14\":\"6\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,7],\"1\":[2,59],\"2\":[2,46],\"3\":[1,10],\"4\":[2,42],\"5\":[2,51],\"6\":[2,115],\"7\":[1,79],\"8\":[1,20],\"9\":[2,61],\"10\":[2,24],\"11\":[2,73],\"12\":[2,16],\"13\":[3,25],\"14\":[1,3]},\"averageFieldLength\":[1.8,42.06666666666667],\"storedFields\":{\"0\":{\"h\":\"Installation Guide\",\"t\":[\"Note: Onlyfrom source is available now.\"]},\"1\":{\"h\":\"From pip\",\"t\":[\"A simple way to install Register RAG is to use pip, and a virtual environment is recommended. If gpu is available, you should install pytoch with gpu support. More information can be found here.\",\"conda create -n register-rag python==3.10 conda activate register-rag pip3 install torch torchvision torchaudio # For cuda12.1 pip3 install register-rag\",\"Then, you can run the following command to check if the installation is successful.\",\"python -c \\\"import register_rag; print(register_rag.__version__)\\\"\"]},\"2\":{\"h\":\"From source\",\"t\":[\"You can also install Register RAG from source. First, clone the repository.\",\"git clone https://github.com/Charon-ops/RegisterRAG.git\\\" cd RegisterRAG\",\"Then, install the dependencies.\",\"pip install -r requirements.txt\",\"Finally, install Register RAG.\",\"pip install -e .\",\"Then, you can run the following command to check if the installation is successful.\",\"python -c \\\"import register_rag; print(register_rag.__version__)\\\"\"]},\"3\":{\"h\":\"Docker\",\"t\":[\"You can also use Docker to run Register RAG.\"]},\"4\":{\"h\":\"Quick Start\",\"t\":[\"In this part, you will learn how to configure Register RAG.\",\"Register RAG uses a json file to configure the whole pipeline. The configuration file is divided into several parts, including embedding, store, generation and prompt. There will be more parts in the future, such as rerank, websearch, etc.\"]},\"5\":{\"h\":\"Basic Configuration\",\"t\":[\"A basic configuration file is shown below, and we will build a simple RAG pipeline using this configuration file in this part.\",\"{ \\\"embedding\\\": { \\\"embedding_type\\\": \\\"remote\\\", \\\"embedding_model_name_or_path\\\": \\\"xinference/bge-m3\\\", \\\"embedding_remote_url\\\": \\\"http://localhost:9997\\\", \\\"embedding_model_preload\\\": true }, \\\"store\\\": { \\\"store_type\\\": \\\"local\\\", \\\"store_name\\\": \\\"chroma\\\", \\\"store_local_path\\\": \\\"/path/to/chroma\\\" }, \\\"generation\\\": { \\\"generation_type\\\": \\\"remote\\\", \\\"generation_model_name_or_path\\\": \\\"xinference/qwen2-instruct\\\", \\\"generation_remote_url\\\": \\\"http://localhost:9997\\\", \\\"generation_xinference_config\\\": { \\\"xinference_model_size\\\": \\\"1_5\\\", \\\"xinference_mdoel_quantization\\\": \\\"4-bit\\\" } } }\"]},\"6\":{\"h\":\"Xinference Service\",\"t\":[\"If you want to try Register RAG using the above configuration file, you should start the xinference service first. You can refer to the xinference documentation for more information.\",\"We will use docker as an example to start the xinference service. You can run the following command to start the xinference service:\",\"# For Chinese users, you can use the following command to pull the image from Aliyun. docker pull registry.cn-hangzhou.aliyuncs.com/xprobe_xinference/xinference:latest # Or you can pull the image from Docker Hub. docker pull xprobe/xinference:latest\",\"Then, make sure that you have installed NVIDIA driver and NVIDIA Container Toolkit. More information could be found here.\",\"Finally, you can run the following command to start the xinference service:\",\"docker run -e XINFERENCE_MODEL_SRC=modelscope -p 9997:9997 --gpus all xprobe/xinference:latest xinference-local -H 0.0.0.0 --log-level debug\",\"Note: --gpus and -H must be set, and the CUDA version on the host machine should be 12.4 or above. If you have multiple GPUs, you can use --gpus 0,1,2 to specify the GPUs you want to use. The image can only run on GPU available machines. If you want to run the image on a CPU machine, you can refer to the xinference documentation for more information.\",\"After starting the xinference service, you can visit http://localhost:9997 to check if the service is running.\"]},\"7\":{\"h\":\"Pipeline\",\"t\":[\"Then, you can create a python file to run the following code:\",\"import asyncio from register_rag import Pipeline from register_rag.documents import Document from register_rag.documents.loader import PDFLoader from register_rag.documents.splitter import CharacterSplitter async def main(): pipeline = Pipeline(\\\"path/to/your/configuration.json\\\") loader = PDFLoader(\\\"path/to/your/pdf\\\") # Split the document by '\\\\n', you can use other splitters. docs = await loader.load_and_split(splitter=CharacterSplitter()) collection_name = \\\"default\\\" await self.pipeline.add_docs(docs, collection_name) # Generate the response. query = \\\"What is the capital of China?\\\" # The query you want to ask. top_k = 5 # The number of related documents you want to retrieve. return_related_docs = True # Whether to return the related documents. response, related_docs = await pipeline.get_response( query, collection_name, top_k, return_related_docs ) print(f\\\"Response: {response}\\\") print(f\\\"Related Docs: {related_docs}\\\") asyncio.run(main())\"]},\"8\":{\"h\":\"Introduction\",\"t\":[\"Register RAG provides a simple and highly customizable way to build a RAG(Retrieval-Augmented Generation) pipeline for text generation tasks.\"]},\"9\":{\"h\":\"🌟 Features\",\"t\":[\"Highly customizable\",\"You can easily customize the RAG pipeline through the configuration file using the components we provide.\",\"It is also easy to add your own components to the pipeline. You can just inherit the base class and implement the necessary methods. Then, you should regist your component in the factory. That's it!\",\"Quick to set up\",\"A python package is provided to help you set up the RAG pipeline quickly. You can install it through pip.(Under development)\",\"A docker image is provided to help you set up the RAG pipeline quickly. You can pull it from the docker hub.(Under development)\"]},\"10\":{\"h\":\"🚀 Installation\",\"t\":[\"Note: Onlyfrom source is available now. More installation methods will be provided in the future.\",\"Please refer to the Installation Guide for detailed instructions.\"]},\"11\":{\"h\":\"🙏 Acknowledgements\",\"t\":[\"We are deeply grateful for the work done by those who came before us, which has greatly facilitated the construction of our framework. Below is a list of the open-source projects we used, in no particular order:\",\"Xinference: Streamline the operation and integration of various AI models. More details can be found here.\",\"Ollama: A platform for building and deploying LLMs. More details can be found here.\",\"VuePress: Minimalistic Vue-powered static site generator. More details can be found here.\",\"vuepress-theme-hope: A vuepress theme with tons of features. More details can be found here.\",\"chroma: An open-source embedding database. More details can be found here.\"]},\"12\":{\"h\":\"🤝 Contribution\",\"t\":[\"We welcome contributions to Register RAG! Please check out the contribution guide for more information.\"]},\"13\":{\"h\":\"✉️ Contact Us\",\"t\":[\"If you have any questions or suggestions, please feel free to contact us through email or GitHub Issues. We will get back to you as soon as possible.\"]},\"14\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"✉️\",{\"0\":{\"13\":1}}],[\"🤝\",{\"0\":{\"12\":1}}],[\"🙏\",{\"0\":{\"11\":1}}],[\"🚀\",{\"0\":{\"10\":1}}],[\"just\",{\"1\":{\"9\":1}}],[\"json\",{\"1\":{\"4\":1,\"7\":1}}],[\"🌟\",{\"0\":{\"9\":1}}],[\"k\",{\"1\":{\"7\":2}}],[\"=\",{\"1\":{\"7\":8}}],[\"2\",{\"1\":{\"6\":1}}],[\"0\",{\"1\":{\"6\":5}}],[\"xprobe\",{\"1\":{\"6\":3}}],[\"xinference\",{\"0\":{\"6\":1},\"1\":{\"5\":5,\"6\":13,\"11\":1}}],[\"404\",{\"1\":{\"14\":1}}],[\"4\",{\"1\":{\"5\":1,\"6\":1}}],[\"5\",{\"1\":{\"5\":1,\"7\":1}}],[\"questions\",{\"1\":{\"13\":1}}],[\"query\",{\"1\":{\"7\":3}}],[\"quantization\",{\"1\":{\"5\":1}}],[\"quickly\",{\"1\":{\"9\":2}}],[\"quick\",{\"0\":{\"4\":1},\"1\":{\"9\":1}}],[\"qwen2\",{\"1\":{\"5\":1}}],[\"9997\",{\"1\":{\"5\":2,\"6\":3}}],[\"llms\",{\"1\":{\"11\":1}}],[\"list\",{\"1\":{\"11\":1}}],[\"level\",{\"1\":{\"6\":1}}],[\"learn\",{\"1\":{\"4\":1}}],[\"load\",{\"1\":{\"7\":1}}],[\"loader\",{\"1\":{\"7\":3}}],[\"log\",{\"1\":{\"6\":1}}],[\"local\",{\"1\":{\"5\":2,\"6\":1}}],[\"localhost\",{\"1\":{\"5\":2,\"6\":1}}],[\"latest\",{\"1\":{\"6\":3}}],[\"under\",{\"1\":{\"9\":2}}],[\"up\",{\"1\":{\"9\":3}}],[\"url\",{\"1\":{\"5\":2}}],[\"us\",{\"0\":{\"13\":1},\"1\":{\"11\":1,\"13\":1}}],[\"using\",{\"1\":{\"5\":1,\"6\":1,\"9\":1}}],[\"used\",{\"1\":{\"11\":1}}],[\"users\",{\"1\":{\"6\":1}}],[\"uses\",{\"1\":{\"4\":1}}],[\"use\",{\"1\":{\"1\":1,\"3\":1,\"6\":4,\"7\":1}}],[\"minimalistic\",{\"1\":{\"11\":1}}],[\"methods\",{\"1\":{\"9\":1,\"10\":1}}],[\"multiple\",{\"1\":{\"6\":1}}],[\"must\",{\"1\":{\"6\":1}}],[\"main\",{\"1\":{\"7\":2}}],[\"machines\",{\"1\":{\"6\":1}}],[\"machine\",{\"1\":{\"6\":2}}],[\"make\",{\"1\":{\"6\":1}}],[\"mdoel\",{\"1\":{\"5\":1}}],[\"m3\",{\"1\":{\"5\":1}}],[\"models\",{\"1\":{\"11\":1}}],[\"model\",{\"1\":{\"5\":4,\"6\":1}}],[\"more\",{\"1\":{\"1\":1,\"4\":1,\"6\":3,\"10\":1,\"11\":5,\"12\":1}}],[\"back\",{\"1\":{\"13\":1}}],[\"base\",{\"1\":{\"9\":1}}],[\"basic\",{\"0\":{\"5\":1},\"1\":{\"5\":1}}],[\"by\",{\"1\":{\"7\":1,\"11\":1}}],[\"bit\",{\"1\":{\"5\":1}}],[\"bge\",{\"1\":{\"5\":1}}],[\"building\",{\"1\":{\"11\":1}}],[\"build\",{\"1\":{\"5\":1,\"8\":1}}],[\"before\",{\"1\":{\"11\":1}}],[\"below\",{\"1\":{\"5\":1,\"11\":1}}],[\"be\",{\"1\":{\"1\":1,\"4\":1,\"6\":3,\"10\":1,\"11\":5}}],[\"database\",{\"1\":{\"11\":1}}],[\"done\",{\"1\":{\"11\":1}}],[\"docs\",{\"1\":{\"7\":8}}],[\"document\",{\"1\":{\"7\":2}}],[\"documents\",{\"1\":{\"7\":5}}],[\"documentation\",{\"1\":{\"6\":2}}],[\"docker\",{\"0\":{\"3\":1},\"1\":{\"3\":1,\"6\":5,\"9\":2}}],[\"deploying\",{\"1\":{\"11\":1}}],[\"dependencies\",{\"1\":{\"2\":1}}],[\"details\",{\"1\":{\"11\":5}}],[\"detailed\",{\"1\":{\"10\":1}}],[\"deeply\",{\"1\":{\"11\":1}}],[\"development\",{\"1\":{\"9\":2}}],[\"default\",{\"1\":{\"7\":1}}],[\"def\",{\"1\":{\"7\":1}}],[\"debug\",{\"1\":{\"6\":1}}],[\"driver\",{\"1\":{\"6\":1}}],[\"divided\",{\"1\":{\"4\":1}}],[\"email\",{\"1\":{\"13\":1}}],[\"embedding\",{\"1\":{\"4\":1,\"5\":5,\"11\":1}}],[\"easy\",{\"1\":{\"9\":1}}],[\"easily\",{\"1\":{\"9\":1}}],[\"example\",{\"1\":{\"6\":1}}],[\"etc\",{\"1\":{\"4\":1}}],[\"e\",{\"1\":{\"2\":1,\"6\":1}}],[\"environment\",{\"1\":{\"1\":1}}],[\"out\",{\"1\":{\"12\":1}}],[\"our\",{\"1\":{\"11\":1}}],[\"ollama\",{\"1\":{\"11\":1}}],[\"operation\",{\"1\":{\"11\":1}}],[\"open\",{\"1\":{\"11\":2}}],[\"ops\",{\"1\":{\"2\":1}}],[\"own\",{\"1\":{\"9\":1}}],[\"of\",{\"1\":{\"7\":2,\"11\":4}}],[\"other\",{\"1\":{\"7\":1}}],[\"only\",{\"1\":{\"6\":1}}],[\"onlyfrom\",{\"1\":{\"0\":1,\"10\":1}}],[\"on\",{\"1\":{\"6\":3}}],[\"order\",{\"1\":{\"11\":1}}],[\"or\",{\"1\":{\"5\":2,\"6\":2,\"13\":2}}],[\"help\",{\"1\":{\"9\":2}}],[\"here\",{\"1\":{\"1\":1,\"6\":1,\"11\":5}}],[\"highly\",{\"1\":{\"8\":1,\"9\":1}}],[\"hope\",{\"1\":{\"11\":1}}],[\"host\",{\"1\":{\"6\":1}}],[\"how\",{\"1\":{\"4\":1}}],[\"h\",{\"1\":{\"6\":2}}],[\"has\",{\"1\":{\"11\":1}}],[\"have\",{\"1\":{\"6\":2,\"13\":1}}],[\"hangzhou\",{\"1\":{\"6\":1}}],[\"hub\",{\"1\":{\"6\":1,\"9\":1}}],[\"http\",{\"1\":{\"5\":2,\"6\":1}}],[\"https\",{\"1\":{\"2\":1}}],[\"vue\",{\"1\":{\"11\":1}}],[\"vuepress\",{\"1\":{\"11\":3}}],[\"various\",{\"1\":{\"11\":1}}],[\"visit\",{\"1\":{\"6\":1}}],[\"virtual\",{\"1\":{\"1\":1}}],[\"version\",{\"1\":{\"1\":1,\"2\":1,\"6\":1}}],[\"tasks\",{\"1\":{\"8\":1}}],[\"text\",{\"1\":{\"8\":1}}],[\"try\",{\"1\":{\"6\":1}}],[\"true\",{\"1\":{\"5\":1,\"7\":1}}],[\"type\",{\"1\":{\"5\":3}}],[\"those\",{\"1\":{\"11\":1}}],[\"through\",{\"1\":{\"9\":2,\"13\":1}}],[\"that\",{\"1\":{\"6\":1,\"9\":1}}],[\"this\",{\"1\":{\"4\":1,\"5\":2}}],[\"theme\",{\"1\":{\"11\":2}}],[\"there\",{\"1\":{\"4\":1}}],[\"the\",{\"1\":{\"1\":2,\"2\":4,\"4\":3,\"6\":19,\"7\":7,\"9\":10,\"10\":2,\"11\":4,\"12\":1}}],[\"then\",{\"1\":{\"1\":1,\"2\":2,\"6\":1,\"7\":1,\"9\":1}}],[\"txt\",{\"1\":{\"2\":1}}],[\"tons\",{\"1\":{\"11\":1}}],[\"top\",{\"1\":{\"7\":2}}],[\"toolkit\",{\"1\":{\"6\":1}}],[\"torchaudio\",{\"1\":{\"1\":1}}],[\"torchvision\",{\"1\":{\"1\":1}}],[\"torch\",{\"1\":{\"1\":1}}],[\"to\",{\"1\":{\"1\":3,\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"6\":11,\"7\":6,\"8\":1,\"9\":5,\"10\":1,\"12\":1,\"13\":2}}],[\"12\",{\"1\":{\"6\":1}}],[\"1\",{\"1\":{\"1\":1,\"5\":1,\"6\":1}}],[\"10\",{\"1\":{\"1\":1}}],[\"necessary\",{\"1\":{\"9\":1}}],[\"number\",{\"1\":{\"7\":1}}],[\"nvidia\",{\"1\":{\"6\":2}}],[\"name\",{\"1\":{\"5\":3,\"7\":3}}],[\"n\",{\"1\":{\"1\":1,\"7\":1}}],[\"not\",{\"1\":{\"14\":1}}],[\"note\",{\"1\":{\"0\":1,\"6\":1,\"10\":1}}],[\"no\",{\"1\":{\"11\":1}}],[\"now\",{\"1\":{\"0\":1,\"10\":1}}],[\"class\",{\"1\":{\"9\":1}}],[\"clone\",{\"1\":{\"2\":2}}],[\"customize\",{\"1\":{\"9\":1}}],[\"customizable\",{\"1\":{\"8\":1,\"9\":1}}],[\"cuda\",{\"1\":{\"6\":1}}],[\"cuda12\",{\"1\":{\"1\":1}}],[\"came\",{\"1\":{\"11\":1}}],[\"capital\",{\"1\":{\"7\":1}}],[\"can\",{\"1\":{\"1\":2,\"2\":2,\"3\":1,\"6\":9,\"7\":2,\"9\":4,\"11\":5}}],[\"cpu\",{\"1\":{\"6\":1}}],[\"cn\",{\"1\":{\"6\":1}}],[\"cd\",{\"1\":{\"2\":1}}],[\"china\",{\"1\":{\"7\":1}}],[\"chinese\",{\"1\":{\"6\":1}}],[\"charactersplitter\",{\"1\":{\"7\":1}}],[\"charon\",{\"1\":{\"2\":1}}],[\"chroma\",{\"1\":{\"5\":2,\"11\":1}}],[\"check\",{\"1\":{\"1\":1,\"2\":1,\"6\":1,\"12\":1}}],[\"c\",{\"1\":{\"1\":1,\"2\":1}}],[\"collection\",{\"1\":{\"7\":3}}],[\"code\",{\"1\":{\"7\":1}}],[\"could\",{\"1\":{\"6\":1}}],[\"contact\",{\"0\":{\"13\":1},\"1\":{\"13\":1}}],[\"container\",{\"1\":{\"6\":1}}],[\"contributions\",{\"1\":{\"12\":1}}],[\"contribution\",{\"0\":{\"12\":1},\"1\":{\"12\":1}}],[\"construction\",{\"1\":{\"11\":1}}],[\"config\",{\"1\":{\"5\":1}}],[\"configuration\",{\"0\":{\"5\":1},\"1\":{\"4\":1,\"5\":2,\"6\":1,\"7\":1,\"9\":1}}],[\"configure\",{\"1\":{\"4\":2}}],[\"conda\",{\"1\":{\"1\":2}}],[\"component\",{\"1\":{\"9\":1}}],[\"components\",{\"1\":{\"9\":2}}],[\"com\",{\"1\":{\"2\":1,\"6\":1}}],[\"command\",{\"1\":{\"1\":1,\"2\":1,\"6\":3}}],[\"create\",{\"1\":{\"1\":1,\"7\":1}}],[\"feel\",{\"1\":{\"13\":1}}],[\"features\",{\"0\":{\"9\":1},\"1\":{\"11\":1}}],[\"free\",{\"1\":{\"13\":1}}],[\"framework\",{\"1\":{\"11\":1}}],[\"from\",{\"0\":{\"1\":1,\"2\":1},\"1\":{\"2\":1,\"6\":2,\"7\":4,\"9\":1}}],[\"facilitated\",{\"1\":{\"11\":1}}],[\"factory\",{\"1\":{\"9\":1}}],[\"f\",{\"1\":{\"7\":2}}],[\"future\",{\"1\":{\"4\":1,\"10\":1}}],[\"file\",{\"1\":{\"4\":2,\"5\":2,\"6\":1,\"7\":1,\"9\":1}}],[\"finally\",{\"1\":{\"2\":1,\"6\":1}}],[\"first\",{\"1\":{\"2\":1,\"6\":1}}],[\"following\",{\"1\":{\"1\":1,\"2\":1,\"6\":3,\"7\":1}}],[\"for\",{\"1\":{\"1\":1,\"6\":3,\"8\":1,\"10\":1,\"11\":2,\"12\":1}}],[\"found\",{\"1\":{\"1\":1,\"6\":1,\"11\":5,\"14\":1}}],[\"work\",{\"1\":{\"11\":1}}],[\"which\",{\"1\":{\"11\":1}}],[\"who\",{\"1\":{\"11\":1}}],[\"whole\",{\"1\":{\"4\":1}}],[\"whether\",{\"1\":{\"7\":1}}],[\"what\",{\"1\":{\"7\":1}}],[\"want\",{\"1\":{\"6\":3,\"7\":2}}],[\"way\",{\"1\":{\"1\":1,\"8\":1}}],[\"welcome\",{\"1\":{\"12\":1}}],[\"we\",{\"1\":{\"5\":1,\"6\":1,\"9\":1,\"11\":2,\"12\":1,\"13\":1}}],[\"websearch\",{\"1\":{\"4\":1}}],[\"will\",{\"1\":{\"4\":2,\"5\":1,\"6\":1,\"10\":1,\"13\":1}}],[\"with\",{\"1\":{\"1\":1,\"11\":1}}],[\"possible\",{\"1\":{\"13\":1}}],[\"powered\",{\"1\":{\"11\":1}}],[\"platform\",{\"1\":{\"11\":1}}],[\"please\",{\"1\":{\"10\":1,\"12\":1,\"13\":1}}],[\"pdf\",{\"1\":{\"7\":1}}],[\"pdfloader\",{\"1\":{\"7\":2}}],[\"p\",{\"1\":{\"6\":1}}],[\"pull\",{\"1\":{\"6\":4,\"9\":1}}],[\"package\",{\"1\":{\"9\":1}}],[\"path\",{\"1\":{\"5\":4,\"7\":2}}],[\"particular\",{\"1\":{\"11\":1}}],[\"parts\",{\"1\":{\"4\":2}}],[\"part\",{\"1\":{\"4\":1,\"5\":1}}],[\"projects\",{\"1\":{\"11\":1}}],[\"provided\",{\"1\":{\"9\":2,\"10\":1}}],[\"provide\",{\"1\":{\"9\":1}}],[\"provides\",{\"1\":{\"8\":1}}],[\"prompt\",{\"1\":{\"4\":1}}],[\"preload\",{\"1\":{\"5\":1}}],[\"print\",{\"1\":{\"1\":1,\"2\":1,\"7\":2}}],[\"python\",{\"1\":{\"1\":1,\"2\":1,\"7\":1,\"9\":1}}],[\"python==3\",{\"1\":{\"1\":1}}],[\"pytoch\",{\"1\":{\"1\":1}}],[\"pipeline\",{\"0\":{\"7\":1},\"1\":{\"4\":1,\"5\":1,\"7\":5,\"8\":1,\"9\":4}}],[\"pip3\",{\"1\":{\"1\":2}}],[\"pip\",{\"0\":{\"1\":1},\"1\":{\"1\":1,\"2\":2,\"9\":1}}],[\"your\",{\"1\":{\"7\":2,\"9\":2}}],[\"you\",{\"1\":{\"1\":2,\"2\":2,\"3\":1,\"4\":1,\"6\":14,\"7\":4,\"9\":7,\"13\":2}}],[\"greatly\",{\"1\":{\"11\":1}}],[\"grateful\",{\"1\":{\"11\":1}}],[\"get\",{\"1\":{\"7\":1,\"13\":1}}],[\"generator\",{\"1\":{\"11\":1}}],[\"generate\",{\"1\":{\"7\":1}}],[\"generation\",{\"1\":{\"4\":1,\"5\":5,\"8\":2}}],[\"github\",{\"1\":{\"2\":1,\"13\":1}}],[\"git\",{\"1\":{\"2\":2}}],[\"gpus\",{\"1\":{\"6\":5}}],[\"gpu\",{\"1\":{\"1\":2,\"6\":1}}],[\"guide\",{\"0\":{\"0\":1},\"1\":{\"10\":1,\"12\":1}}],[\"r\",{\"1\":{\"2\":1}}],[\"running\",{\"1\":{\"6\":1}}],[\"run\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"6\":5,\"7\":2}}],[\"retrieval\",{\"1\":{\"8\":1}}],[\"retrieve\",{\"1\":{\"7\":1}}],[\"return\",{\"1\":{\"7\":3}}],[\"related\",{\"1\":{\"7\":7}}],[\"response\",{\"1\":{\"7\":5}}],[\"regist\",{\"1\":{\"9\":1}}],[\"registry\",{\"1\":{\"6\":1}}],[\"registerrag\",{\"1\":{\"2\":2}}],[\"register\",{\"1\":{\"1\":6,\"2\":4,\"3\":1,\"4\":2,\"6\":1,\"7\":4,\"8\":1,\"12\":1}}],[\"refer\",{\"1\":{\"6\":2,\"10\":1}}],[\"remote\",{\"1\":{\"5\":4}}],[\"rerank\",{\"1\":{\"4\":1}}],[\"requirements\",{\"1\":{\"2\":1}}],[\"repository\",{\"1\":{\"2\":1}}],[\"recommended\",{\"1\":{\"1\":1}}],[\"rag\",{\"1\":{\"1\":6,\"2\":4,\"3\":1,\"4\":2,\"5\":1,\"6\":1,\"7\":4,\"8\":2,\"9\":3,\"12\":1}}],[\"soon\",{\"1\":{\"13\":1}}],[\"source\",{\"0\":{\"2\":1},\"1\":{\"0\":1,\"2\":1,\"10\":1,\"11\":2}}],[\"s\",{\"1\":{\"9\":1}}],[\"split\",{\"1\":{\"7\":2}}],[\"splitter=charactersplitter\",{\"1\":{\"7\":1}}],[\"splitters\",{\"1\":{\"7\":1}}],[\"splitter\",{\"1\":{\"7\":1}}],[\"specify\",{\"1\":{\"6\":1}}],[\"src=modelscope\",{\"1\":{\"6\":1}}],[\"self\",{\"1\":{\"7\":1}}],[\"set\",{\"1\":{\"6\":1,\"9\":3}}],[\"service\",{\"0\":{\"6\":1},\"1\":{\"6\":6}}],[\"several\",{\"1\":{\"4\":1}}],[\"site\",{\"1\":{\"11\":1}}],[\"size\",{\"1\":{\"5\":1}}],[\"simple\",{\"1\":{\"1\":1,\"5\":1,\"8\":1}}],[\"shown\",{\"1\":{\"5\":1}}],[\"should\",{\"1\":{\"1\":1,\"6\":2,\"9\":1}}],[\"static\",{\"1\":{\"11\":1}}],[\"starting\",{\"1\":{\"6\":1}}],[\"start\",{\"0\":{\"4\":1},\"1\":{\"6\":4}}],[\"streamline\",{\"1\":{\"11\":1}}],[\"store\",{\"1\":{\"4\":1,\"5\":4}}],[\"suggestions\",{\"1\":{\"13\":1}}],[\"sure\",{\"1\":{\"6\":1}}],[\"such\",{\"1\":{\"4\":1}}],[\"successful\",{\"1\":{\"1\":1,\"2\":1}}],[\"support\",{\"1\":{\"1\":1}}],[\"ai\",{\"1\":{\"11\":1}}],[\"are\",{\"1\":{\"11\":1}}],[\"acknowledgements\",{\"0\":{\"11\":1}}],[\"activate\",{\"1\":{\"1\":1}}],[\"augmented\",{\"1\":{\"8\":1}}],[\"add\",{\"1\":{\"7\":1,\"9\":1}}],[\"await\",{\"1\":{\"7\":3}}],[\"after\",{\"1\":{\"6\":1}}],[\"all\",{\"1\":{\"6\":1}}],[\"aliyuncs\",{\"1\":{\"6\":1}}],[\"aliyun\",{\"1\":{\"6\":1}}],[\"also\",{\"1\":{\"2\":1,\"3\":1,\"9\":1}}],[\"any\",{\"1\":{\"13\":1}}],[\"an\",{\"1\":{\"6\":1,\"11\":1}}],[\"and\",{\"1\":{\"1\":1,\"4\":1,\"5\":1,\"6\":3,\"7\":1,\"8\":1,\"9\":1,\"11\":2}}],[\"above\",{\"1\":{\"6\":2}}],[\"ask\",{\"1\":{\"7\":1}}],[\"async\",{\"1\":{\"7\":1}}],[\"asyncio\",{\"1\":{\"7\":2}}],[\"as\",{\"1\":{\"4\":1,\"6\":1,\"13\":2}}],[\"a\",{\"1\":{\"1\":2,\"4\":1,\"5\":2,\"6\":1,\"7\":1,\"8\":2,\"9\":2,\"11\":3}}],[\"available\",{\"1\":{\"0\":1,\"1\":1,\"6\":1,\"10\":1}}],[\"it\",{\"1\":{\"9\":4}}],[\"implement\",{\"1\":{\"9\":1}}],[\"import\",{\"1\":{\"1\":1,\"2\":1,\"7\":5}}],[\"image\",{\"1\":{\"6\":4,\"9\":1}}],[\"inherit\",{\"1\":{\"9\":1}}],[\"integration\",{\"1\":{\"11\":1}}],[\"introduction\",{\"0\":{\"8\":1}}],[\"into\",{\"1\":{\"4\":1}}],[\"instructions\",{\"1\":{\"10\":1}}],[\"instruct\",{\"1\":{\"5\":1}}],[\"installed\",{\"1\":{\"6\":1}}],[\"install\",{\"1\":{\"1\":4,\"2\":5,\"9\":1}}],[\"installation\",{\"0\":{\"0\":1,\"10\":1},\"1\":{\"1\":1,\"2\":1,\"10\":2}}],[\"including\",{\"1\":{\"4\":1}}],[\"in\",{\"1\":{\"4\":2,\"5\":1,\"9\":1,\"10\":1,\"11\":1}}],[\"information\",{\"1\":{\"1\":1,\"6\":3,\"12\":1}}],[\"if\",{\"1\":{\"1\":2,\"2\":1,\"6\":4,\"13\":1}}],[\"issues\",{\"1\":{\"13\":1}}],[\"is\",{\"1\":{\"0\":1,\"1\":4,\"2\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"9\":3,\"10\":1,\"11\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
